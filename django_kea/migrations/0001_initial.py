# Generated by Django 2.2.12 on 2020-05-05 08:48

from django.db import migrations, models
import django_kea.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Dhcp4Option',
            fields=[
                ('option_id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.SmallIntegerField()),
                ('value', django_kea.fields.Binary(blank=True, null=True)),
                ('formatted_value', models.TextField(blank=True, null=True)),
                ('space', models.CharField(blank=True, max_length=128, null=True)),
                ('persistent', models.BooleanField(default=False)),
                ('dhcp_client_class', models.CharField(blank=True, max_length=128, null=True)),
                ('dhcp4_subnet_id', models.BigIntegerField(blank=True, null=True)),
                ('user_context', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'dhcp4_options',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dhcp6Option',
            fields=[
                ('option_id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.SmallIntegerField()),
                ('value', django_kea.fields.Binary(blank=True, null=True)),
                ('formatted_value', models.TextField(blank=True, null=True)),
                ('space', models.CharField(blank=True, max_length=128, null=True)),
                ('persistent', models.BooleanField(default=False)),
                ('dhcp_client_class', models.CharField(blank=True, max_length=128, null=True)),
                ('dhcp6_subnet_id', models.BigIntegerField(blank=True, null=True)),
                ('user_context', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'dhcp6_options',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DhcpOptionScope',
            fields=[
                ('scope_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('scope_name', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'db_table': 'dhcp_option_scope',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('host_id', models.AutoField(primary_key=True, serialize=False)),
                ('dhcp_identifier', django_kea.fields.Binary()),
                ('dhcp4_subnet_id', models.BigIntegerField(blank=True, null=True)),
                ('dhcp6_subnet_id', models.BigIntegerField(blank=True, null=True)),
                ('ipv4_address', django_kea.fields.IPv4Address(blank=True, null=True)),
                ('hostname', models.CharField(blank=True, max_length=255, null=True)),
                ('dhcp4_client_classes', models.CharField(blank=True, max_length=255, null=True)),
                ('dhcp6_client_classes', models.CharField(blank=True, max_length=255, null=True)),
                ('dhcp4_next_server', django_kea.fields.IPv4Address(blank=True, null=True)),
                ('dhcp4_server_hostname', models.CharField(blank=True, max_length=64, null=True)),
                ('dhcp4_boot_file_name', models.CharField(blank=True, max_length=128, null=True)),
                ('user_context', models.TextField(blank=True, null=True)),
                ('auth_key', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'db_table': 'hosts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HostIdentifierType',
            fields=[
                ('type', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'db_table': 'host_identifier_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IPv6Reservation',
            fields=[
                ('reservation_id', models.AutoField(primary_key=True, serialize=False)),
                ('address', models.CharField(max_length=39)),
                ('prefix_len', models.SmallIntegerField(default=128)),
                ('type', models.SmallIntegerField(default=0)),
                ('dhcp6_iaid', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'IPv6 reservation',
                'db_table': 'ipv6_reservations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Lease4',
            fields=[
                ('address', django_kea.fields.IPv4Address(primary_key=True, serialize=False)),
                ('hwaddr', django_kea.fields.Binary(blank=True, null=True)),
                ('client_id', django_kea.fields.Binary(blank=True, null=True)),
                ('valid_lifetime', models.BigIntegerField(blank=True, null=True)),
                ('expire', models.DateTimeField(blank=True, null=True)),
                ('subnet_id', models.BigIntegerField(blank=True, null=True)),
                ('fqdn_fwd', models.NullBooleanField()),
                ('fqdn_rev', models.NullBooleanField()),
                ('hostname', models.CharField(blank=True, max_length=255, null=True)),
                ('user_context', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lease4',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Lease6',
            fields=[
                ('address', models.CharField(max_length=39, primary_key=True, serialize=False)),
                ('duid', django_kea.fields.Binary(blank=True, null=True)),
                ('valid_lifetime', models.BigIntegerField(blank=True, null=True)),
                ('expire', models.DateTimeField(blank=True, null=True)),
                ('subnet_id', models.BigIntegerField(blank=True, null=True)),
                ('pref_lifetime', models.BigIntegerField(blank=True, null=True)),
                ('lease_type', models.SmallIntegerField(blank=True, null=True)),
                ('iaid', models.IntegerField(blank=True, null=True)),
                ('prefix_len', models.SmallIntegerField(blank=True, null=True)),
                ('fqdn_fwd', models.NullBooleanField()),
                ('fqdn_rev', models.NullBooleanField()),
                ('hostname', models.CharField(blank=True, max_length=255, null=True)),
                ('hwaddr', django_kea.fields.Binary(blank=True, null=True)),
                ('hwtype', models.SmallIntegerField(blank=True, null=True)),
                ('hwaddr_source', models.SmallIntegerField(blank=True, null=True)),
                ('user_context', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lease6',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Lease6Type',
            fields=[
                ('lease_type', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'lease6_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LeaseHwaddrSource',
            fields=[
                ('hwaddr_source', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=40, null=True)),
            ],
            options={
                'db_table': 'lease_hwaddr_source',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LeaseState',
            fields=[
                ('state', models.BigIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'lease_state',
                'managed': False,
            },
        ),
    ]
